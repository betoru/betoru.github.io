I"~<ul class="toc" id="markdown-toc">
  <li><a href="#테스트-환경" id="markdown-toc-테스트-환경">테스트 환경</a></li>
  <li><a href="#함수가-undefined를-반환" id="markdown-toc-함수가-undefined를-반환">함수가 undefined를 반환</a></li>
  <li><a href="#onclickreturn-false" id="markdown-toc-onclickreturn-false">onclick=”return false”</a></li>
  <li><a href="#void-연산자-사용" id="markdown-toc-void-연산자-사용">void 연산자 사용</a></li>
</ul>

<h4 id="테스트-환경">테스트 환경</h4>
<ul>
  <li>explorer 10</li>
  <li>chrome 43</li>
  <li>firefox 38</li>
  <li>opera 30</li>
</ul>

<p>문서의 어느 한 요소를 클릭했을 때 지정한 함수를 호출하도록 HTML을 작성한다고 하자. 이럴 때 흔히들 <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code> 태그의 href 속성을 이용하여 스크립트를 실행하곤 한다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:getSome()"</span><span class="nt">&gt;</span> 눌러요 <span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>
<p>‘javascript: pseudo protocol’ 혹은 그냥 ‘javascript protocol’, ‘javascript prefix’라고 하는 이 방식은 사실 <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code> 태그의 매우 잘못된 사용법이다. 대신 <code class="language-plaintext highlighter-rouge">&lt;button&gt;</code> 태그와 onclick 속성의 조합이 권장되는데, 불가피하게 <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code> 태그를 꼭 사용해야 한다면 최소한 아래 내용은 숙지하는게 좋다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;script&gt;</span>
  <span class="kd">function</span> <span class="nx">fn</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span><span class="p">);</span>
    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
  <span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:fn()"</span><span class="nt">&gt;</span>pushme<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>
<p>위 코드를 브라우저로 열어서 <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code> 태그를 클릭하면 무슨 일이 일어날까?</p>

<p><img src="/images/javascript-pseudo-protocol-1.png" alt="첨부이미지1" /></p>

<p>파이어폭스와 익스플로러는 앵커에 의해 스크립트가 실행될 때, 해당 스크립트가 리턴하는 undefined 이외의 값을 URL로 간주하는 경향이 있다. 위 스샷은 이 때문에 발생하는 현상이다. 에러라면 에러라고 할 수 있는 현상인데, 이를 방지하기 위해선 아래 방법 중 하나를 따른다. (크롬과 오페라는 해당 없음. 사파리는 패스)</p>

<h4 id="함수가-undefined를-반환">함수가 undefined를 반환</h4>
<p>자바스크립트의 함수는 브레이스<code class="language-plaintext highlighter-rouge">}</code>  혹은 return을 만났을 때 undefined를 반환한다. 즉, 반환값을 명시하지 않는 방법이다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
  <span class="kd">function</span> <span class="nx">fn</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:fn()"</span><span class="nt">&gt;</span>pushme<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>

<h4 id="onclickreturn-false">onclick=”return false”</h4>
<p>반환값을 정의할 수 없는 함수를 호출할 때 사용한다. (가령 거의 대부분 객체를 리턴하는 jQuery의 메서드들) 이러한 경우에 onclick 이벤트 핸들러가 false를 리턴하게 하여 브라우저의 기본동작을 막아버리는 방법이다. (이벤트 핸들러가 false를 리턴하면 태그의 기본동작과 이벤트 전파(버블링, 캡처링)를 차단하는 효과가 있다.)</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script&gt;</span>
  <span class="kd">function</span> <span class="nx">fn</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span><span class="p">);</span>
    <span class="k">return</span> <span class="dl">'</span><span class="s1">arrrrgh</span><span class="dl">'</span><span class="p">;</span>
  <span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:fn()"</span> <span class="na">onclick=</span><span class="s">"return false"</span><span class="nt">&gt;</span>pushme<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>

<h4 id="void-연산자-사용">void 연산자 사용</h4>
<p>void 연산자가 피연산자를 실행하되 피연산자의 값을 무시하고 무조건 undefined를 반환하는 특성을 이용한 방법이다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"javascript:void window.open()"</span><span class="nt">&gt;</span>open<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>
:ET